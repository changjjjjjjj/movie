{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","App.js","apollo.js","index.js"],"names":["Container","styled","div","Poster","props","poster","Movie","id","to","GET_MOVIES","gql","Header","header","Title","h1","Subtitle","h3","Loading","Movies","Home","useQuery","loading","data","movies","map","movie","year","title","summary","medium_cover_image","genres","GET_MOVIE","Column","h4","Description","p","bg","Detail","useParams","variables","console","log","language","rating","App","path","exact","component","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"mmBAKA,IAAMA,EAAYC,IAAOC,IAAV,KAQTC,EAASF,IAAOC,IAAV,KACc,SAACE,GAAD,OAAWA,EAAMC,UAiB5BC,EAVD,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,GAAIF,EAAa,EAAbA,OACnB,OACE,cAACL,EAAD,UACE,cAAC,IAAD,CAAMQ,GAAE,WAAMD,GAAd,SACE,cAACJ,EAAD,CAAQE,OAAQA,S,0rCCpBxB,IAAMI,EAAaC,cAAH,KAaVV,EAAYC,IAAOC,IAAV,KAOTS,EAASV,IAAOW,OAAV,KAWNC,EAAQZ,IAAOa,GAAV,KAMLC,EAAWd,IAAOe,GAAV,KAIRC,EAAUhB,IAAOC,IAAV,KAOPgB,EAASjB,IAAOC,IAAV,KASCiB,EAAO,WAAO,IAAD,EACEC,mBAASX,GAA3BY,EADgB,EAChBA,QAASC,EADO,EACPA,KACjB,OACE,eAAC,EAAD,WACE,eAACX,EAAD,WACE,cAACE,EAAD,wCACA,cAACE,EAAD,2BAEDM,GAAW,cAACJ,EAAD,6BACVI,GAAWC,GACX,cAACJ,EAAD,UACGI,EAAKC,OAAOC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEElB,GAAIkB,EAAMlB,GACVmB,KAAMD,EAAMC,KACZC,MAAOF,EAAME,MACbC,QAASH,EAAMG,QACfvB,OAAQoB,EAAMI,mBACdC,OAAQL,EAAMK,QANTL,EAAMlB,a,wnCCtEzB,IAAMwB,EAAYrB,cAAH,KAYTV,EAAYC,IAAOC,IAAV,KAUT8B,EAAS/B,IAAOC,IAAV,KAKNW,EAAQZ,IAAOa,GAAV,KAKLC,EAAWd,IAAOgC,GAAV,KAKRC,EAAcjC,IAAOkC,EAAV,KAIXhC,EAASF,IAAOC,IAAV,KAIc,SAACE,GAAD,OAAWA,EAAMgC,MAK9BC,EAAS,WAAO,IAAD,MAClB9B,EAAO+B,cAAP/B,GADkB,EAEAa,mBAASW,EAAW,CAC5CQ,UAAW,CAAEhC,IAAKA,KADZc,EAFkB,EAElBA,QAASC,EAFS,EAETA,KAKjB,OAFAkB,QAAQC,IAAInB,GAGV,eAAC,EAAD,WACE,eAACU,EAAD,WACE,cAAC,EAAD,UAAQX,EAAU,aAAH,UAAqBC,EAAKG,MAAME,SAC/C,eAAC,EAAD,kBACGL,QADH,IACGA,GADH,UACGA,EAAMG,aADT,aACG,EAAaiB,SADhB,gBAC6BpB,QAD7B,IAC6BA,GAD7B,UAC6BA,EAAMG,aADnC,aAC6B,EAAakB,UAE1C,cAACT,EAAD,iBAAcZ,QAAd,IAAcA,GAAd,UAAcA,EAAMG,aAApB,aAAc,EAAaG,aAE7B,cAAC,EAAD,CAAQQ,GAAE,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAMG,MAAMI,yBCvDfe,EATH,WACV,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW5B,IACxC,cAAC,IAAD,CAAO0B,KAAK,OAAOC,OAAO,EAAMC,UAAWV,QCTpCW,EAAS,IAAIC,eAAa,CACrCC,IAAK,yBACLC,MAAO,IAAIC,kBCGbC,IAASC,OACP,cAAC,iBAAD,CAAgBN,OAAQA,EAAxB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.b55e5742.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 380px;\n  width: 100%;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  overflow: hidden;\n  border-radius: 7px;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.poster});\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst Movie = ({ id, poster }) => {\n  return (\n    <Container>\n      <Link to={`/${id}`}>\n        <Poster poster={poster} />\n      </Link>\n    </Container>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport Movie from \"../components/Movie\";\n\nconst GET_MOVIES = gql`\n  {\n    movies {\n      id\n      title\n      year\n      summary\n      medium_cover_image\n      genres\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Header = styled.header`\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  height: 45vh;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 60px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst Subtitle = styled.h3`\n  font-size: 35px;\n`;\n\nconst Loading = styled.div`\n  font-size: 18px;\n  opacity: 0.5;\n  font-weight: 500;\n  margin-top: 10px;\n`;\n\nconst Movies = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 25px;\n  width: 60%;\n  position: relative;\n  top: -50px;\n`;\n\nexport const Home = () => {\n  const { loading, data } = useQuery(GET_MOVIES);\n  return (\n    <Container>\n      <Header>\n        <Title>Don't Know What to Watch?</Title>\n        <Subtitle>Try this!</Subtitle>\n      </Header>\n      {loading && <Loading>Wait a Minute</Loading>}\n      {!loading && data && (\n        <Movies>\n          {data.movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n          ))}\n        </Movies>\n      )}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\n\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      title\n      medium_cover_image\n      rating\n      summary\n      language\n    }\n  }\n`;\n\nconst Container = styled.div`\n  height: 100vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n`;\n\nconst Column = styled.div`\n  margin-left: 10px;\n  width: 50%;\n`;\n\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\n\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\n\nconst Description = styled.p`\n  font-size: 28px;\n`;\n\nconst Poster = styled.div`\n  width: 25%;\n  height: 60%;\n  background-color: transparent;\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  background-position: center center;\n`;\n\nexport const Detail = () => {\n  const { id } = useParams();\n  const { loading, data } = useQuery(GET_MOVIE, {\n    variables: { id: +id },\n  });\n  console.log(data);\n\n  return (\n    <Container>\n      <Column>\n        <Title>{loading ? \"Loading...\" : `${data.movie.title}`}</Title>\n        <Subtitle>\n          {data?.movie?.language} Â· {data?.movie?.rating}\n        </Subtitle>\n        <Description>{data?.movie?.summary}</Description>\n      </Column>\n      <Poster bg={data?.movie.medium_cover_image}></Poster>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\n//import { About } from \"./routes/About\";\nimport { Home } from \"./routes/Home\";\nimport { Detail } from \"./routes/Detail\";\nimport { Navigation } from \"./components/Navigation\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/:id\" exact={true} component={Detail} />\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nexport const client = new ApolloClient({\n  uri: \"http://localhost:4000/\",\n  cache: new InMemoryCache(),\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { client } from \"./apollo\";\nimport { ApolloProvider } from \"@apollo/client\";\n//import Test from './Test'\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}